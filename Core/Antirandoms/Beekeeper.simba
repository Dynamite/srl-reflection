const
  R_BEEKEEPER_ID = 8649;
  R_BEEKEEPER_BOXID = 16168;
  R_BEEKEEPER_BOXNUMBER = 9;
  R_BEEKEEPER_BUILDINTERFACE = 420;

  R_BEEKEEPER_LID = 16036;
  R_BEEKEEPER_TOP = 16025;
  R_BEEKEEPER_BOTTOM = 16022;
  R_BEEKEEPER_LEGS = 16034;

  R_BEEKEEPER_SLOT1 = 25;
  R_BEEKEEPER_SLOT2 = 22;
  R_BEEKEEPER_SLOT3 = 23;
  R_BEEKEEPER_SLOT4 = 21;

  R_BEEKEEPER_ORIGIN1 = 12;
  R_BEEKEEPER_ORIGIN2 = 13;
  R_BEEKEEPER_ORIGIN3 = 14;
  R_BEEKEEPER_ORIGIN4 = 15;

  R_BEEKEEPER_DEST1 = 16;
  R_BEEKEEPER_DEST2 = 17;
  R_BEEKEEPER_DEST3 = 18;
  R_BEEKEEPER_DEST4 = 19;

  R_BEEKEEPER_NPCTEXT1 = 'click here to';
  R_BEEKEEPER_NPCTEXT2 = 'yeah, let me';

function R_InBeekeeper: boolean;
begin
  Result := ValidNPC(R_BEEKEEPER_ID);
  if Result then
    Result := Length(GetObjectsByID(R_BEEKEEPER_BOXID,
                        OBJECT_TYPE_INTERACTABLE, 8)) = R_BEEKEEPER_BOXNUMBER;
end;

function BuildInterfaceUp: boolean;
begin
  Result := ValidInterface(R_BEEKEEPER_BUILDINTERFACE);
end;

function TalkToKeeper: boolean;
var
  NPC: TNPC;
  P: TPoint;
  t: integer;
begin
  if not FindNPC(R_BEEKEEPER_ID, NPC)then Exit;
  if not TileOnMS(NPC.Tile, NPC.Height * 2 / 3)then
  begin
    SetAngle(true);
    if not TileOnMS(NPC.Tile, NPC.Height * 2 / 3)then
      if not WalkToTile(NPC.Tile, 0, 0)then
        Exit;
  end;
  P := TileToMS(NPC.Tile, NPC.Height * 2 / 3);
  Mouse(P.x, P.y, 3, 3, false);
  Result := R_ChooseOption('Talk-to');
  if Result then
  begin
    MarkTime(t);
    While ((not FindNPCText(R_BEEKEEPER_NPCTEXT1)) and (TimeFromMArk(t) < 5000))do
    begin
      if charactermoving then
        MarkTime(t);
      wait(100+Random(100));
    end;
  end;
end;

function HandleKeeper: boolean;
var
  Keeper: TNPC;
begin
  if not LoggedIn then Exit;
  Result := BuildInterfaceUp;
  if Result then Exit;
  While not BuildInterfaceUp do
  begin
    if not FindNPC(R_BEEKEEPER_ID, Keeper)then Exit;
    if not(InteractingWithMe(Keeper))then
      TalkToKeeper;
    ClickToContinue;
    if(FindNPCText(R_BEEKEEPER_NPCTEXT2))then
    begin
      Mouse(260, 444, 15, 3, true);
      wait(800+Random(2000));
    end;
  end;
end;

function GetSlotChild(slot: integer): Integer;
begin
  case Slot of
    1: Result := R_BEEKEEPER_SLOT1;
    2: Result := R_BEEKEEPER_SLOT2;
    3: Result := R_BEEKEEPER_SLOT3;
    4: Result := R_BEEKEEPER_SLOT4;
    else
    begin
      r_Debug('Invalid slot number.', 'Beekeeper');
      Result := -1;
    end;
  end;
end;

function GetPieceIDAt(Slot: Integer): Integer;
begin
  if not BuildInterfaceUp then Exit;
  Result := GetModelID(R_BEEKEEPER_BUILDINTERFACE, GetSlotChild(Slot));
end;

procedure MovePiece(From, toSlot: Integer);
var
  IFace, Child, EndChild, x, y: Integer;
  TL, BR, P: TPoint; //Top left, Bottom right
begin
  if not BuildInterfaceUp then Exit;
  r_Debug('Moving peice!', 'Beekeeper');

  case From of
    1: Child := R_BEEKEEPER_ORIGIN1;
    2: Child := R_BEEKEEPER_ORIGIN2;
    3: Child := R_BEEKEEPER_ORIGIN3;
    4: Child := R_BEEKEEPER_ORIGIN4;
  end;
  case toSlot of
    1: EndChild := R_BEEKEEPER_DEST1;
    2: EndChild := R_BEEKEEPER_DEST2;
    3: EndChild := R_BEEKEEPER_DEST3;
    4: EndChild := R_BEEKEEPER_DEST4;
  end;

  //Clicking component slot.
  IFace := GetInterface(R_BEEKEEPER_BUILDINTERFACE, Child);
  TL.x := SmartGetFieldInt(IFace, hook_interface_GetX);
  TL.y := SmartGetFieldInt(IFace, hook_interface_GetY);

  BR.x := SmartGetFieldInt(IFace, hook_interface_GetWidth) + TL.x;
  BR.y := SmartGetFieldInt(IFace, hook_interface_GetHeight) + TL.y;

  P := MiddleTPA([TL, BR]);
  MMouse(p.x, p.y, 10, 5);
  GetMousePos(x, y);
  HoldMouse(x, y, 1);
  SmartFreeObject(IFace);

  //Moving mouse to destination slot.
  IFace := GetInterface(R_BEEKEEPER_BUILDINTERFACE, EndChild);
  TL.x := SmartGetFieldInt(IFace, hook_interface_GetX);
  TL.y := SmartGetFieldInt(IFace, hook_interface_GetY);

  BR.x := SmartGetFieldInt(IFace, hook_interface_GetWidth) + TL.x;
  BR.y := SmartGetFieldInt(IFace, hook_interface_GetHeight) + TL.y;

  P := MiddleTPA([TL, BR]);
  MMouse(p.x, p.y, 10, 5);
  GetMousePos(x, y);
  ReleaseMouse(x, y, 1);
  SmartFreeObject(IFace);

end;

function R_SolveBeekeeper: boolean;
var
  i, ID, t: integer;
begin
  if not R_InBeekeeper then Exit;
  while(R_InBeekeeper)do
  begin
    if not BuildInterfaceUp then
    begin
      HandleKeeper;
    end else
    begin
      for i := 1 to 4 do
      begin
        ID := GetPieceIDAt(i);
        case ID of
          R_BEEKEEPER_LID    : MovePiece(i, 1);
          R_BEEKEEPER_TOP    : MovePiece(i, 2);
          R_BEEKEEPER_BOTTOM : MovePiece(i, 3);
          R_BEEKEEPER_LEGS   : MovePiece(i, 4);
        end;
        wait(300+Random(1000));
      end;
      Mouse(216, 277, 8, 8, true);
      MarkTime(t);
      while(R_InBeekeeper and (TimeFromMark(t) < 10000))do
      begin
        ClickToContinue;
        Wait(300+Random(300));
      end;
    end;
  end;
  ClickToContinue;
  Result := not R_InBeekeeper;
end;
