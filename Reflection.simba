{$define smart}
{$DEFINE REFLECTION}

{$i ./Core/Constants.simba}
{$i ./Core/Hooks.simba}
{$i ./Core/Core.simba}
{$i ./Core/MMWalk.simba}
{$i ./Core/Characters.simba}
{$i ./Core/Login.simba}
{$i ./Core/Objects.simba}
{$i ./Core/Interfaces.simba}
{$i ./Core/Inventory.simba}
{$i ./Core/Equipment.simba}
{$i ./Core/Bank.simba}
{$i ./Core/Chat.simba}
{$i ./Core/GroundItems.simba}
{$i ./Core/GameTab.simba}

{$i ./Core/Antirandoms\Frog.simba}
{$i ./Core/Antirandoms\Mime.simba}
{$i ./Core/Antirandoms\Molly.simba}
{$i ./Core/Antirandoms\Beekeeper.simba}
{$i ./Core/Antirandoms\Demon.simba}
{$i ./Core/Antirandoms\Forester.simba}
{$i ./Core/Antirandoms\Sandwich.simba}
{$i ./Core/Antirandoms\Antirandoms.simba}

{*******************************************************************************
procedure SetupReflectionEx(World: Integer; Signed, Members, Term: Boolean);
By: Drags111
Description: Sets up reflection. If Term is true and the hooks are
            outdated, it will terminate the script. If term is false then
            the script will continue to run, which means you will need backups
            for your reflection functions.
*******************************************************************************}
function SetupReflectionEx(Terminate: Boolean): boolean;
begin
  SetupConstants;
  Result := true;
  SRL_OnFindRandomCall := @R_OnFindRandomCall;
  if(SmartGetFieldInt(0, hook_static_LoginIndex) = -1) then
  begin
    Result := False;
    if(Terminate)then
    begin
      Writeln('*****Hooks are outdated. Terminating script.*****');
      TerminateScript;
    end else
      Writeln('*************HOOKS ARE OUTDATED.*************');
  end;
end;
