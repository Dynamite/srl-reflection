{------------------------------------------------------------------------------]
|                             Minimap Functions                                |
[------------------------------------------------------------------------------]
| - All functions to do with the minimap go here                               |
|                                                                              |
|                                                                              |
|                                                                              |
[------------------------------------------------------------------------------}

{*******************************************************************************
function I_WalkPath (TileArray : TTileArray; MouseRandomness, timeoutMs : Integer) : Boolean;
By: Drags111, modded by Cstrike
Description: Walks the path.
*******************************************************************************}
function I_WalkPath (Tiles : TTileArray; MouseRandomness, timeoutMs : Integer) : Boolean;
var
  i, t, attempts: integer;
  P: TPoint;
  next: boolean;
label
  ProcStart;
begin
  Result := False;
  if not I_LoggedIn then Exit;
  if high(Tiles) < 0 then
  begin
    Writeln ('[Infinity: WalkPath] Tile height is zero, aborting before crash');
    Exit;
  end;
  Inc(attempts);
  ProcStart:
  i := -1;
  if(DistanceFrom(Tiles[High(Tiles)]) < 6)then
  begin
    Result := true;
    Exit;
  end;

  //Getting the starting index.
  for i := High(Tiles) downto 0 do
    if(TileOnMM(Tiles[i]))then
    begin
      i := i;
      Break;
    end;
  if(i = -1)then
    Exit;

  //Walk remainder of the path.
  for i := i to High(Tiles) do
  begin
    next := false;
    if not(TileOnMM(Tiles[i]))then
    begin
      Writeln('Tile not on MM.');
      break;
    end;
    P := TileToMM(Tiles[i]);
    Mouse(P.x, P.y, 1, 1, true);
    while(DistanceFromFlag <> 0)do
    begin
      if not WaitToMove(3000)then
      begin
        MarkTime(t);
        while(TimeFromMark(t) < 7000)do
          if(WaitToMove(1000))then break;
        if(TimeFromMark(t) >= timeoutMs)then
        begin
          Writeln('[Infinity] Warning: Timed out ('+ToStr(timeoutMs)+' ms), quitting function.');
          Result := False;
          Exit;;
        end;
      end;
      if(i < High(Tiles))then
      begin
        if(TileOnMM(Tiles[i+1]))then
        begin
          next := true;
          break;
        end;
      end;
    end;
    if(i < High(Tiles))then
      if(TileOnMM(Tiles[i+1]))then
        next := true;
    if not next then
      break;
  end;
  Result := DistanceFrom(Tiles[High(Tiles)]) <= 5;
  if not Result then
  begin
    if(attempts > 7)then
    begin
      Writeln('Failed more than ten attempts.');
      Exit;
    end;
    While(GetSpeed > 0)do wait(100+Random(100));
    goto ProcStart;
  end;
  While(GetSpeed > 0)do wait(100+Random(100));
end;
