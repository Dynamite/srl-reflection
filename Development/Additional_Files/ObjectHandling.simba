{------------------------------------------------------------------------------]
|                             Object Handling                                  |
[------------------------------------------------------------------------------]
| - All advanced object handling is done here                                  |
| - Object types handled here:                                                 |
|     * Doors                                                                  |
|     * Stairs                                                                 |
|     * Ladders                                                                |
|     * Gates                                                                  |
| - More can be added upon request                                             |
|                                                                              |
[------------------------------------------------------------------------------}

{===============================================================================
function I_OpenDoor (OpenDoorID, MouseRandomness : Integer) : Boolean;
By: Cstrike
Description: Opens door with ID.
===============================================================================}
function I_OpenDoor (OpenDoorID, MouseRandomness : Integer) : Boolean;
var
  Door : TRSObject;
  TP : TPoint;
begin
  if not I_LoggedIn then Exit;
  Result := False;
  Door := GetObjectByID (OpenDoorID, OBJECT_TYPE_INTERACTABLE, I_Minimap_TileRadius);
  if TileOnMS (Door.Tile, 0) then
  begin
    TP := TileToMS (Door.Tile, 0);
    I_GMouse (TP.x, TP.y, MouseRandomness, MouseRandomness, false);
    wait (500+random(700));
    if R_ChooseOptionMulti (['pen ', 'oor']) then
    begin
      Result := True;
    end else Writeln ('[Infinity: Object: Open door] Open door menu text not found');
  end else Writeln ('[Infinity: Object: Open door] Door not on main screen');
end;

{===============================================================================
function I_OpenDoorEx (OpenDoorID, ClosedDoorID, MouseRandomness, TimeoutMs : Integer) : Boolean;
By: Cstrike
Description: Opens door if only if closed, returns true if open.
===============================================================================}
function I_OpenDoorEx (OpenDoorID, ClosedDoorID, MouseRandomness, TimeoutMs : Integer) : Boolean;
var
  Door, OpenDoorCheck : TRSObject;
  TP : TPoint;
  t : Integer;
begin
  if not I_LoggedIn then Exit;
  Result := False;

  // Check if door open
  OpenDoorCheck := GetObjectByID (OpenDoorID, OBJECT_TYPE_INTERACTABLE, I_Minimap_TileRadius);
  if not (OpenDoorCheck = NULL_RSOBJECT) then
  begin
    Writeln ('[Infinity: Object: Open door] Door is already open');
    Result := True;
    Exit;
  end;

  // Check if its closed
  Door := GetObjectByID (ClosedDoorID, OBJECT_TYPE_INTERACTABLE, I_Minimap_TileRadius);
  if not (Door = NULL_RSOBJECT) then
  begin
    Writeln ('[Infinity: Object: Open door] Door not found (returned null object)');
    Result := False;
    Exit;
  end;
  if TileOnMS (Door.Tile, 0) then
  begin
    TP := TileToMS (Door.Tile, 0);
    I_GMouse (TP.x, TP.y, MouseRandomness, MouseRandomness, false);
    wait (500+random(700));
    if R_ChooseOptionMulti (['pen ', 'oor']) then
    begin
      repeat
        wait (50);
        Door := GetObjectByID (OpenDoorID, OBJECT_TYPE_INTERACTABLE, I_Minimap_TileRadius);
        if not (Door = NULL_RSOBJECT) then // If door is open (therefore not being null...)
        begin
          Result := True;
          Exit;
        end;
      until (TimeFromMark(t) > TimeoutMs)
    end else Writeln ('[Infinity: Object: Open door] Open door menu text not found');
  end else Writeln ('[Infinity: Object: Open door] Door not on main screen');
end;

{===============================================================================
function I_OpenAndWalkThroughDoor (OpenDoorID, MouseRandomness, timeoutMs : Integer; DirectionToWalk : String) : Boolean;
By: Cstrike
Description: Opens door and walks through.
===============================================================================}
function I_OpenAndWalkThroughDoor (OpenDoorID, MouseRandomness, timeoutMs : Integer; DirectionToWalk : String) : Boolean;
var
  Door : TRSObject;
  TP : TPoint;
  t : Integer;
begin
  if not I_LoggedIn then Exit;
  Result := False;

  // Check if door open
  Door := GetObjectByID (OpenDoorID, OBJECT_TYPE_INTERACTABLE, I_Minimap_TileRadius);
  if not (Door = NULL_RSOBJECT) then
  begin
    Writeln ('[Infinity: Object: Open door] Door is already open');
  end;

  if TileOnMS (Door.Tile, 0) then
  begin
    TP := TileToMS (Door.Tile, 0);
    I_GMouse (TP.x, TP.y, MouseRandomness, MouseRandomness, false);
    wait (500+random(700));
    if R_ChooseOptionMulti (['pen ', 'oor']) then
    begin
      repeat
        wait (50);
        Door := GetObjectByID (OpenDoorID, OBJECT_TYPE_INTERACTABLE, I_Minimap_TileRadius);
        if not (Door = NULL_RSOBJECT) then // If door is open (therefore not being null...)
        begin
          Result := True;
          Exit;
        end;
      until (TimeFromMark(t) > TimeoutMs)
    end else Writeln ('[Infinity: Object: Open door] Open door menu text not found');
  end else Writeln ('[Infinity: Object: Open door] Door not on main screen');
end;

{===============================================================================
function I_OpenAndWalkThroughDoorEx (OpenDoorID, ClosedDoorID : Integer; DirectionToWalk : String) : Boolean;
By: Cstrike
Description: Handles door and walks through in direction.
===============================================================================}
function I_OpenAndWalkThroughDoorEx (OpenDoorID, ClosedDoorID : Integer; DirectionToWalk : String) : Boolean;
begin
  if not I_LoggedIn then Exit;
  Result := False;
end;

{===============================================================================
function I_OpenAndWalkThroughDoorExBox (OpenDoorID, ClosedDoorID : Integer; DirectionToWalk : String; BoxToBeInToReturnTrue : TBox) : Boolean;
By: Cstrike
Description: Handles door and when walking through, returns true if in box.
===============================================================================}
function I_OpenAndWalkThroughDoorExBox (OpenDoorID, ClosedDoorID : Integer; DirectionToWalk : String; BoxToBeInToReturnTrue : TBox) : Boolean;
begin
  if not I_LoggedIn then Exit;
  Result := False;
end;

{===============================================================================
function I_OpenAndWalkThroughDoorExBoxArray (OpenDoorID, ClosedDoorID : Integer; DirectionToWalk : String; BoxArrayToBeInToReturnTrue : TBoxArray) : Boolean;
By: Cstrike
Description: Handles door like above, returns true if in a box in the box array.
===============================================================================}
function I_OpenAndWalkThroughDoorExBoxArray (OpenDoorID, ClosedDoorID : Integer; DirectionToWalk : String; BoxArrayToBeInToReturnTrue : TBoxArray) : Boolean;
begin
  if not I_LoggedIn then Exit;
  Result := False;
end;
